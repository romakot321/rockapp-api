services:
  app:
    build:
      context: ./
    container_name: rockappapi_app
    depends_on:
      - db
      - redis
    env_file:
      - .env
    restart: always
    networks:
      global_network:
      default:
    volumes:
      - app_localstorage:/app/storage
      - ./logs/fastapi:/app/logs

  db:
    image: postgres:latest
    container_name: rockappapi_db
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./etc/postgresql/postgresql.conf:/etc/postgresql/postgresql.conf:ro
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    restart: always
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    networks:
      default:

  redis:
    image: redis
    container_name: rockappapi_redis
    restart: always
    env_file:
      - .env
    networks:
      default:

  rqworker:
    build:
      context: ./
      dockerfile: ./rq.Dockerfile
    env_file:
      - .env
    container_name: rockappapi_rqworker
    restart: always
    networks:
      default:
    volumes:
      - app_localstorage:/app/storage

  elasticsearch:
    image: elasticsearch:8.0.1
    container_name: rockappapi_elasticsearch
    environment:
      discovery.type: "single-node"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      ELASTIC_PASSWORD: password
    volumes:
      - ./etc/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - elasticsearch_data:/usr/share/elasticsearch/data

networks:
  default:
    name: rockappapi_network
  global_network:
    external: true

volumes:
  parser_cache:
  postgres_data:
  elasticsearch_data:
  app_localstorage:
